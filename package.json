{
  "name": "webmscore-webpack5",
  "version": "0.21.0",
  "description": "MuseScore's libmscore in WebAssembly! Read mscz data, and generate audio/MIDI/MusicXML/SVG/PNG/PDF sheets right in browsers",
  "type": "module",
  "types": "./src/index.d.ts",
  "main": "./webmscore.nodejs.cjs",
  "browser": "./webmscore.cdn.mjs",
  "files": [
    "src",
    "schemas.ts",
    "webmscore.js",
    "webmscore.mjs",
    "webmscore.cdn.mjs",
    "webmscore.nodejs.cjs",
    "webmscore.webpack.mjs",
    "webmscore.lib.*",
    "!webmscore.lib.d.ts"
  ],
  "keywords": [
    "musescore",
    "mscz",
    "svg",
    "midi",
    "musicxml",
    "sheet-music",
    "scorefile",
    "webassembly",
    "LibreScore"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LibreScore/webmscore.git"
  },
  "bugs": {
    "url": "https://github.com/LibreScore/webmscore/issues"
  },
  "homepage": "https://github.com/LibreScore/webmscore#readme",
  "author": "LibreScore",
  "license": "GPL",
  "dependencies": {
    "file-loader": "^6.2.0"
  },
  "devDependencies": {
    "@babel/core": "^7.12.10",
    "@babel/preset-env": "^7.12.11",
    "@rollup/plugin-babel": "^5.2.2",
    "rollup": "^2.8.2"
  },
  "scripts": {
    "build": "npm run clean && npm run compile && npm run bundle && npm run d-ts",
    "build:js-only": "npm run clean:d-ts && npm run bundle && npm run d-ts",
    "version": "npm run build:js-only",
    "bundle": "rollup -c",
    "compile": "cd ../ && make release && cd - && mv webmscore.lib.js.mem webmscore.lib.mem.wasm && mv webmscore.lib.js.symbols webmscore.lib.symbols",
    "postcompile": "perl -pi -e 's/\\\\([0-9a-f]{2})/chr(hex($1))/eg' webmscore.lib.symbols",
    "clean": "npm run clean:d-ts && cd ../ && make clean",
    "clean:d-ts": "rm -f src/*.d.ts *.d.ts",
    "d-ts": "tsc --emitDeclarationOnly --declaration --allowJs --lib esnext --target esnext src/index.js",
    "install:webpack": "node -e \"fs.linkSync('webmscore.lib.wasm', 'webmscore.lib.wasm-');fs.linkSync('webmscore.lib.mem.wasm', 'webmscore.lib.mem-')\" || true # workaround for Webpack 4"
  }
}
